scalar EmailAddress
scalar URL


type Query {
    getAutores:[Autor]!
    getSingleAutor(id:ID!):Autor!
    getPublicaciones:[Publicacion]!
    getOnePublicacion(id:ID!):Publicacion!
}

type Mutation{
    createNewAutor(data:AutorInput!):Autor!
    updateOneAutor(id:ID!,data:AutorUpdateInput!):Autor!
    deleteOneAutor(id:ID!):String!
    createNewPublicacion(data:PublicacionInput!):Publicacion
    updateOnePublicacion(id:ID!,data:PublicacionUpdateInput):Publicacion!
    deleteOnePublicacion(id:ID!):String!
}


type Publicacion {
  _id: ID!
  imagen:URL #debe ser obligatorio
  titulo:String!
  contenido:String!
  autor: Autor!
  liked_by: [Autor]!

}

input PublicacionInput {
  titulo: String!
  contenido:String!
  autor: String! #va el id
  imagen: URL #debe ir obligatorio
}

input PublicacionUpdateInput{
  titulo: String
  contenido: String
  imagen:URL
  liked_by: String
  activo: Boolean
}


type Autor{
    _id:ID!
    nombre:String!
    apellido:String!
    nombreUsuario:String!
    email:EmailAddress!
    numTelefono:String
    sexo:GENEROS
    imagen_perfil:URL!
    biografia:String
    website:String
}

input AutorInput {
    nombre:String!
    apellido:String!
    nombreUsuario:String!
    email:EmailAddress!
    numTelefono:String
    password:String
    sexo:GENEROS
    imagen_perfil:URL
    biografia:String
    website:String
}


input AutorUpdateInput {
    nombre:String
    apellido: String
    email: EmailAddress
    password: String
    sexo: GENEROS
    imagen_perfil: String
    activo: Boolean
}

enum GENEROS {
    M
    F
    O
}
